##========================================================
##    Pin assignments
##    Logi-Pi - Pong Chu book compatible - (work in progress)
##   	- Intended for use the the Logi-Pi and EDU expansion 
##  SW, PB, LEDs on LOGI-Pi have reversed ordering from silkdscreen based upon
## using the EDU with the LOGI-Pi upside down.
##========================================================

##========================================================
NET "clk" TNM_NET = clk;
TIMESPEC TS_clk = PERIOD "clk" 50 MHz HIGH 50%;

##========================================================
## clock and reset
##========================================================
NET "clk"    LOC = P85;

##========================================================
## Buttons
##========================================================
NET "btn_n<1>"   LOC = P102;	
NET "btn_n<0>"   LOC = P101;
#NET "reset_n"  	LOC = P101;	#--reset needs to be moved around depending on application, use sw or button

##=========================================================
### 2 slide switches
##==========================================================			
NET "sw_n<1>"  LOC = P99;
NET "sw_n<0>"  LOC = P100;

#========================================================
# 2 discrete LEDs
#========================================================
NET "led<1>"  LOC = P105	;
NET "led<0>"  LOC = P104	;

###========================================================
### VGA outputs
###========================================================
NET "red<0>"  LOC = P116 	| DRIVE=24 | SLEW=FAST		;	//P3_10
NET "red<1>"  LOC = P88 	| DRIVE=24 | SLEW=FAST		;	//P1_7
NET "red<2>"  LOC = P5 	| DRIVE=24 | SLEW=FAST		;	//P1_1

NET "green<0>"  LOC = P123 | DRIVE=24 | SLEW=FAST		;	//P3_4	
NET "green<1>"  LOC = P92 | DRIVE=24 | SLEW=FAST		;	//P1_8
NET "green<2>"  LOC = P2 	| DRIVE=24 | SLEW=FAST		;	//P1_2

NET "blue<0>"  LOC = P124 | DRIVE=24 | SLEW=FAST		;	//P3_3 
NET "blue<1>"  LOC = P93 	| DRIVE=24 | SLEW=FAST		;	//P1_9
NET "blue<2>"  LOC = P1 	| DRIVE=24 | SLEW=FAST		;	//P1_3

NET "vsync"   LOC = P94 	| DRIVE=24 | SLEW=FAST		;	//P1_10
NET "hsync"   LOC = P16  	| DRIVE=24 | SLEW=FAST		;	//P1_4	



##========================================================
## NES controller pins
##========================================================
NET "nes_clk"  	LOC = P111	|	IOSTANDARD = LVCMOS33;	#PMOD4_2
NET "nes_lat"  	LOC = P124	|	IOSTANDARD = LVCMOS33;	#PMOD4_3
NET "nes1_dat"    LOC = P133	|	IOSTANDARD = LVCMOS33;	#PMOD4_10
NET "nes2_dat"  	LOC = P123	|	IOSTANDARD = LVCMOS33;	#PMOD4_4

##========================================================
## PS2 port 1
##========================================================
NET "ps2c_1" LOC=P115;	##PMOD4-7
NET "ps2d_1" LOC=P114;	##PMOD4-8

##========================================================
## PS2 port 2
##========================================================
NET "ps2c_2" LOC=P124	;	##PMOD3_3
NET "ps2d_2" LOC=P116	;	##PMOD3_10

# This controls segments from 0:3 right to left 
#========================================================
# 4-digit time-multiplexed 7-segment LED display
#========================================================
# This is from 3-0 right to left
# digit enable					
NET "an<3>"  LOC = 	P144	;	#p2_7	
NET "an<2>"  LOC = 	P142	;  #p2_1	
NET "an<1>"  LOC = 	P15	;  #p2_3	
NET "an<0>"  LOC = 	P14	;  #p2_4	
#NET "an_l"   LOC =   P141	;	#p2_2	

# This is wired low bit = a , etc.  the book code is reversed order.
# 7-segment led segments
NET "sseg<0>"  LOC = P118	; 	# segment a			p3_8
NET "sseg<1>"  LOC = P119	; 	# segment b			p3_7
NET "sseg<2>"  LOC = P137	; 	# segment c			p3_2
NET "sseg<3>"  LOC = P143	; 	# segment d			p2_8
NET "sseg<4>"  LOC = P140	; 	# segment e			p2_9
NET "sseg<5>"  LOC = P117	; 	# segment f 		p3_9
NET "sseg<6>"  LOC = P138	; 	# segment g			p3_1
NET "sseg<7>"  LOC = P139	; 	# decimal point 	p2_10	

#========================================================
# UART for Rpi
# TX = FGPA TX  = Host RX				
# RX = FPGA RX  = Host TX				
#========================================================
#NET "rx"  LOC =pxx;		--use tx on rpi
#NET "tx"  LOC =pxx;  	--use rx on rpi

NET "PWM<0>"  LOC =pxx;	#P4_9
NET "PWN<1>"  LOC =pxx;  	#P4_1

